<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:batch="http://www.springframework.org/schema/batch" xmlns:task="http://www.springframework.org/schema/task"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/batch
		http://www.springframework.org/schema/batch/spring-batch.xsd
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd">

	<bean id="record" class="com.springbatch.model.Record" scope="prototype" />

	<batch:job id="reportJob">
		<batch:step id="step1" next="step2">
			<batch:tasklet>
				<batch:chunk reader="cvsFileItemReader" writer="oracleItemWriter"
					commit-interval="1000">
				</batch:chunk>
			</batch:tasklet>
		</batch:step>
		<batch:step id="step2">
			<batch:tasklet>
				<batch:chunk reader="oracleDataReader" writer="oracleDataWriter"
					commit-interval="1000">
				</batch:chunk>
			</batch:tasklet>
		</batch:step>
	</batch:job>

	<bean id="cvsFileItemReader" class="org.springframework.batch.item.file.FlatFileItemReader">
		<!-- Read a csv file -->
		<property name="resource" value="classpath:input/record_dump.csv" />
		<property name="lineMapper">
			<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<!-- split it -->
				<property name="lineTokenizer">
					<bean
						class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
						<property name="names"
							value="countryCode,countryName,countryIsdCode,regionCode,userCreated,dateCreated,stateCode,stateName" />
						<property name="delimiter" value=";" />
					</bean>
				</property>

				<property name="fieldSetMapper">
					<!-- return back to reader, rather than a mapped object. -->
					<!-- <bean class="org.springframework.batch.item.file.mapping.PassThroughFieldSetMapper" 
						/> -->

					<!-- map to an object -->
					<bean
						class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
						<property name="prototypeBeanName" value="record" />
						<property name="customEditors">
							<map>
								<entry key="java.util.Date">
									<ref bean="dateEditor" />
								</entry>
							</map>
						</property>
					</bean>
				</property>
			</bean>
		</property>
	</bean>

	<bean id="dateEditor"
		class="org.springframework.beans.propertyeditors.CustomDateEditor">
		<constructor-arg>
			<bean class="java.text.SimpleDateFormat">
				<constructor-arg value="yyyy/MM/dd" />
			</bean>
		</constructor-arg>
		<constructor-arg value="true" />
	</bean>

	<bean id="oracleItemWriter"
		class="org.springframework.batch.item.database.JdbcBatchItemWriter">
		<property name="dataSource" ref="dataSource" />
		<property name="sql">
			<value>
            <![CDATA[        
            	insert into RECORD_DUMP_TBL(COUNTRY_CODE,COUNTRY_NAME,COUNTRY_ISO_CODE,REGION_CODE,USER_CREATED,DATE_CREATED,STATE_CODE,STATE_NAME) values (:countryCode, :countryName, :countryIsdCode, :regionCode, :userCreated, :dateCreated, :stateCode, :stateName)
            ]]>
			</value>
		</property>
		<!-- It will take care matching between object property and sql name parameter -->
		<property name="itemSqlParameterSourceProvider">
			<bean
				class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider" />
		</property>
	</bean>

	<bean id="oracleDataReader"
		class="org.springframework.batch.item.database.JdbcCursorItemReader"
		scope="step">
		<property name="dataSource" ref="dataSource" />
		<property name="sql"
			value="select COUNTRY_CODE, copy_tab_id from RECORD_DUMP_TBL" />
		<property name="rowMapper">
			<bean class="com.springbatch.util.CopyTableRowMapper" />
		</property>
	</bean>
	
	<bean id="oracleDataWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
        <property name="dataSource" ref="dataSource"/>
        <property name="itemPreparedStatementSetter">
            <bean class="com.springbatch.util.ProcedureParameterSetter"/>
        </property>
        <property name="assertUpdates" value="false" />
        <property name="sql" value="call data_validation.copy_table(?,?,?,?)"/>
    </bean>
</beans>